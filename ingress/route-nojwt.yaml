apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: no-jwt-service-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/enable-rewrite-log: "true"

        ## CORS ##
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, PUT, POST, DELETE, PATCH, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type, Authorization"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"

    nginx.ingress.kubernetes.io/proxy-body-size: "0"


    ## WebSocket ##
    nginx.org/websocket-services: "article-service-service,notice-service-service"
    nginx.ingress.kubernetes.io/proxy-body-size: 64m
    nginx.ingress.kubernetes.io/proxy-read-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-connect-timeout: '3600'

spec:
  ingressClassName: nginx 
  rules:
    - http:
        paths:
          - path: /users(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: user-service-service
                port:
                  number: 80
          - path: /articles(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: article-service-service
                port:
                  number: 80
          - path: /notices(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: notice-service-service
                port:
                  number: 80